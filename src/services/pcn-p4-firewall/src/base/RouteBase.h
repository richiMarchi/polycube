/**
* p4firewall API generated from p4firewall.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* RouteBase.h
*
*
*/

#pragma once

#include "../serializer/RouteJsonObject.h"






#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class P4firewall;

class RouteBase {
 public:
  
  RouteBase(P4firewall &parent);
  
  virtual ~RouteBase();
  virtual void update(const RouteJsonObject &conf);
  virtual RouteJsonObject toJsonObject();

  /// <summary>
  /// Destination IP address
  /// </summary>
  virtual std::string getAddress() = 0;

  /// <summary>
  /// Destination MAC address
  /// </summary>
  virtual std::string getMac() = 0;
  virtual void setMac(const std::string &value) = 0;

  /// <summary>
  /// Outgoing interface
  /// </summary>
  virtual std::string getInterface() = 0;
  virtual void setInterface(const std::string &value) = 0;

  std::shared_ptr<spdlog::logger> logger();
 protected:
  P4firewall &parent_;
};
