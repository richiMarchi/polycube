/**
* p4firewall API generated from p4firewall.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* P4firewallJsonObject.h
*
*
*/

#pragma once


#include "JsonObjectBase.h"

#include "RouteJsonObject.h"
#include "PortsJsonObject.h"
#include "FlowDirectionJsonObject.h"
#include <vector>
#include "polycube/services/cube.h"

namespace polycube {
namespace service {
namespace model {


/// <summary>
///
/// </summary>
class  P4firewallJsonObject : public JsonObjectBase {
public:
  P4firewallJsonObject();
  P4firewallJsonObject(const nlohmann::json &json);
  ~P4firewallJsonObject() final = default;
  nlohmann::json toJson() const final;


  /// <summary>
  /// Name of the p4firewall service
  /// </summary>
  std::string getName() const;
  void setName(std::string value);
  bool nameIsSet() const;

  /// <summary>
  /// Entry of the ports table
  /// </summary>
  const std::vector<PortsJsonObject>& getPorts() const;
  void addPorts(PortsJsonObject value);
  bool portsIsSet() const;
  void unsetPorts();

  /// <summary>
  ///
  /// </summary>
  const std::vector<FlowDirectionJsonObject>& getFlowDirection() const;
  void addFlowDirection(FlowDirectionJsonObject value);
  bool flowDirectionIsSet() const;
  void unsetFlowDirection();

  /// <summary>
  /// Entry associated with the ARP table
  /// </summary>
  const std::vector<RouteJsonObject>& getRoute() const;
  void addRoute(RouteJsonObject value);
  bool routeIsSet() const;
  void unsetRoute();

private:
  std::string m_name;
  bool m_nameIsSet;
  std::vector<PortsJsonObject> m_ports;
  bool m_portsIsSet;
  std::vector<FlowDirectionJsonObject> m_flowDirection;
  bool m_flowDirectionIsSet;
  std::vector<RouteJsonObject> m_route;
  bool m_routeIsSet;
};

}
}
}

