/**
* p4firewall API generated from p4firewall.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* P4firewallApi.h
*
*/

#pragma once

#define POLYCUBE_SERVICE_NAME "p4firewall"


#include "polycube/services/response.h"
#include "polycube/services/shared_lib_elements.h"

#include "FlowDirectionJsonObject.h"
#include "P4firewallJsonObject.h"
#include "PortsJsonObject.h"
#include "RouteJsonObject.h"
#include <vector>


#ifdef __cplusplus
extern "C" {
#endif

Response create_p4firewall_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_p4firewall_flow_direction_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_p4firewall_flow_direction_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_p4firewall_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_p4firewall_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_p4firewall_route_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_p4firewall_route_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response delete_p4firewall_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_p4firewall_flow_direction_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_p4firewall_flow_direction_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_p4firewall_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_p4firewall_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_p4firewall_route_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_p4firewall_route_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_p4firewall_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_p4firewall_flow_direction_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_p4firewall_flow_direction_direction_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_p4firewall_flow_direction_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_p4firewall_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_p4firewall_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_p4firewall_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_p4firewall_route_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_p4firewall_route_interface_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_p4firewall_route_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_p4firewall_route_mac_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response replace_p4firewall_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_p4firewall_flow_direction_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_p4firewall_flow_direction_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_p4firewall_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_p4firewall_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_p4firewall_route_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_p4firewall_route_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_p4firewall_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_p4firewall_flow_direction_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_p4firewall_flow_direction_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_p4firewall_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_p4firewall_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_p4firewall_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_p4firewall_route_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_p4firewall_route_interface_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_p4firewall_route_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_p4firewall_route_mac_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);

Response p4firewall_flow_direction_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response p4firewall_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response p4firewall_ports_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response p4firewall_route_list_by_id_help(const char *name, const Key *keys, size_t num_keys);


#ifdef __cplusplus
}
#endif

